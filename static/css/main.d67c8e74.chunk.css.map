{"version":3,"sources":["webpack://src/index.css","webpack://src/assets/scss/base/_reset.scss","webpack://src/assets/scss/base/_mixins.scss","webpack://src/assets/scss/base/_base.scss","webpack://src/assets/scss/base/_variables.scss","webpack://src/assets/scss/modules/_buttons.scss","webpack://src/assets/scss/modules/_box.scss","webpack://src/assets/scss/layout/_grid.scss","webpack://src/assets/scss/layout/_header.scss","webpack://src/assets/scss/layout/_footer.scss","webpack://src/assets/scss/state/_state.scss","webpack://src/assets/scss/pages/_home.scss"],"names":[],"mappings":"AAAA,KACE,QAAS,CACT,mJAEY,CACZ,kCAAmC,CACnC,iCACF,CAEA,KACE,yEAEF,CCZA,8SAYE,QAAS,CACT,SAAU,CACV,cAAe,CACf,uBAAwB,CACxB,oBAAqB,CACtB,KAEC,aAAc,CACf,MAEC,eAAgB,CACjB,MAEC,wBAAyB,CACzB,gBAAiB,CAClB,cAEC,kBAAmB,CACnB,mBAAoB,CACpB,qBAAsB,CACvB,aAEC,WAAY,CACb,MAEC,WAAY,CACb,oEAEC,aAAc,CACf,MCyES,uBAAmD,CACnD,wBAAqD,CACtD,MAGC,sBAAiD,CACjD,yBAAuD,CACxD,KAGC,kBAAyC,CAC1C,MAGC,sBAAiD,CADnD,MACE,uBAAiD,CADnD,MACE,wBAAiD,CADnD,MACE,yBAAiD,CAfnD,MACE,8BAAmD,CACnD,+BAAqD,CACtD,MAGC,6BAAiD,CACjD,gCAAuD,CACxD,KAGC,yBAAyC,CAC1C,MAGC,6BAAiD,CADnD,MACE,8BAAiD,CADnD,MACE,+BAAiD,CADnD,MACE,gCAAiD,CAfnD,OACE,6BAAmD,CACnD,8BAAqD,CACtD,OAGC,4BAAiD,CACjD,+BAAuD,CACxD,MAGC,wBAAyC,CAC1C,OAGC,4BAAiD,CADnD,OACE,6BAAiD,CADnD,OACE,8BAAiD,CADnD,OACE,+BAAiD,CAfnD,OACE,8BAAmD,CACnD,+BAAqD,CACtD,OAGC,6BAAiD,CACjD,gCAAuD,CACxD,MAGC,yBAAyC,CAC1C,OAGC,6BAAiD,CADnD,OACE,8BAAiD,CADnD,OACE,+BAAiD,CADnD,OACE,gCAAiD,CAfnD,OACE,6BAAmD,CACnD,8BAAqD,CACtD,OAGC,4BAAiD,CACjD,+BAAuD,CACxD,MAGC,wBAAyC,CAC1C,OAGC,4BAAiD,CADnD,OACE,6BAAiD,CADnD,OACE,8BAAiD,CADnD,OACE,+BAAiD,CAfnD,OACE,+BAAmD,CACnD,gCAAqD,CACtD,OAGC,8BAAiD,CACjD,iCAAuD,CACxD,MAGC,0BAAyC,CAC1C,OAGC,8BAAiD,CADnD,OACE,+BAAiD,CADnD,OACE,gCAAiD,CADnD,OACE,iCAAiD,CAfnD,OACE,8BAAmD,CACnD,+BAAqD,CACtD,OAGC,6BAAiD,CACjD,gCAAuD,CACxD,MAGC,yBAAyC,CAC1C,OAGC,6BAAiD,CADnD,OACE,8BAAiD,CADnD,OACE,+BAAiD,CADnD,OACE,gCAAiD,CAfnD,MACE,wBAAmD,CACnD,yBAAqD,CACtD,MAGC,uBAAiD,CACjD,0BAAuD,CACxD,KAGC,mBAAyC,CAC1C,MAGC,uBAAiD,CADnD,MACE,wBAAiD,CADnD,MACE,yBAAiD,CADnD,MACE,0BAAiD,CAfnD,MACE,+BAAmD,CACnD,gCAAqD,CACtD,MAGC,8BAAiD,CACjD,iCAAuD,CACxD,KAGC,0BAAyC,CAC1C,MAGC,8BAAiD,CADnD,MACE,+BAAiD,CADnD,MACE,gCAAiD,CADnD,MACE,iCAAiD,CAfnD,OACE,8BAAmD,CACnD,+BAAqD,CACtD,OAGC,6BAAiD,CACjD,gCAAuD,CACxD,MAGC,yBAAyC,CAC1C,OAGC,6BAAiD,CADnD,OACE,8BAAiD,CADnD,OACE,+BAAiD,CADnD,OACE,gCAAiD,CAfnD,OACE,+BAAmD,CACnD,gCAAqD,CACtD,OAGC,8BAAiD,CACjD,iCAAuD,CACxD,MAGC,0BAAyC,CAC1C,OAGC,8BAAiD,CADnD,OACE,+BAAiD,CADnD,OACE,gCAAiD,CADnD,OACE,iCAAiD,CAfnD,OACE,8BAAmD,CACnD,+BAAqD,CACtD,OAGC,6BAAiD,CACjD,gCAAuD,CACxD,MAGC,yBAAyC,CAC1C,OAGC,6BAAiD,CADnD,OACE,8BAAiD,CADnD,OACE,+BAAiD,CADnD,OACE,gCAAiD,CAfnD,OACE,gCAAmD,CACnD,iCAAqD,CACtD,OAGC,+BAAiD,CACjD,kCAAuD,CACxD,MAGC,2BAAyC,CAC1C,OAGC,+BAAiD,CADnD,OACE,gCAAiD,CADnD,OACE,iCAAiD,CADnD,OACE,kCAAiD,CAfnD,OACE,+BAAmD,CACnD,gCAAqD,CACtD,OAGC,8BAAiD,CACjD,iCAAuD,CACxD,MAGC,0BAAyC,CAC1C,OAGC,8BAAiD,CADnD,OACE,+BAAiD,CADnD,OACE,gCAAiD,CADnD,OACE,iCAAiD,CAClD,EChIP,qBAAsB,CACvB,KAEC,kCCHiC,CDIjC,eCAW,CDCX,iBC6CuB,CD5CvB,sBAAuB,CACxB,EAEC,gBAAiB,CAClB,GAEC,oBAAqB,CACrB,SAAU,CACV,QAAS,CAEX,UAII,UCGa,CDFb,oBAAqB,CACtB,IAGD,cAAe,CAChB,kBAEC,eCvBW,CDwBZ,GAEC,mBCwByB,CDvB1B,GAEC,iBCsBuB,CDrBxB,GAEC,oBCoB0B,CDnB3B,GAEC,mBCkByB,CDjB1B,GAEC,oBCgB0B,CDf3B,GAEC,iBCIuB,CDHxB,YE/CC,qBDuBe,CCtBf,cAAe,CACf,iBAAkB,CACnB,KCHC,kBAAmB,CADrB,kBAIM,kBAAmB,CACnB,YAAa,CACb,UAAW,CACX,gBAAiB,CACjB,iBAAkB,CARxB,wBAWM,iBAAkB,CAClB,UAAW,CACX,QAAS,CACT,cAAe,CACf,2BAAgC,CAftC,8BAiBQ,SAAU,CAjBlB,oBAqBM,WAAY,CArBlB,qBAwBM,eAAgB,CAChB,cAAe,CCFpB,KAEC,YAAa,CACb,cAAe,CACf,iBAXgB,CAYhB,kBAZgB,CAQlB,mBAMI,iBAdc,CAed,kBAfc,CAgBf,gBAKD,aAAc,CACd,cAAe,CAFjB,8BAII,cAAe,CACf,eAAgB,CAhCd,OACE,cAAqC,CADvC,OACE,eAAqC,CADvC,OACE,SAAqC,CADvC,OACE,eAAqC,CADvC,OACE,eAAqC,CADvC,OACE,SAAqC,CADvC,OACE,eAAqC,CADvC,OACE,eAAqC,CADvC,OACE,SAAqC,CADvC,QACE,eAAqC,CADvC,QACE,eAAqC,CADvC,QACE,UAAqC,CLLzC,yBKAE,aACE,cAAqC,CADvC,aACE,eAAqC,CADvC,aACE,SAAqC,CADvC,aACE,eAAqC,CADvC,aACE,eAAqC,CADvC,aACE,SAAqC,CADvC,aACE,eAAqC,CADvC,aACE,eAAqC,CADvC,aACE,SAAqC,CADvC,cACE,eAAqC,CADvC,cACE,eAAqC,CADvC,cACE,UAAqC,CACtC,CLFH,yBKAE,cACE,cAAqC,CADvC,cACE,eAAqC,CADvC,cACE,SAAqC,CADvC,cACE,eAAqC,CADvC,cACE,eAAqC,CADvC,cACE,SAAqC,CADvC,cACE,eAAqC,CADvC,cACE,eAAqC,CADvC,cACE,SAAqC,CADvC,eACE,eAAqC,CADvC,eACE,eAAqC,CADvC,eACE,UAAqC,CACtC,CLFH,0BKAE,aACE,cAAqC,CADvC,aACE,eAAqC,CADvC,aACE,SAAqC,CADvC,aACE,eAAqC,CADvC,aACE,eAAqC,CADvC,aACE,SAAqC,CADvC,aACE,eAAqC,CADvC,aACE,eAAqC,CADvC,aACE,SAAqC,CADvC,cACE,eAAqC,CADvC,cACE,eAAqC,CADvC,cACE,UAAqC,CACtC,CLFH,0BKAE,eACE,cAAqC,CADvC,eACE,eAAqC,CADvC,eACE,SAAqC,CADvC,eACE,eAAqC,CADvC,eACE,eAAqC,CADvC,eACE,SAAqC,CADvC,eACE,eAAqC,CADvC,eACE,eAAqC,CADvC,eACE,SAAqC,CADvC,gBACE,eAAqC,CADvC,gBACE,eAAqC,CADvC,gBACE,UAAqC,CACtC,CCPP,kBACE,iBAAkB,CAClB,2BAA4B,CAF9B,yBAII,iBAAkB,CAClB,SAAU,CACV,SAAU,CACV,UAAW,CACX,WAAY,CACZ,sBAAuB,CACvB,YAAa,CACb,kBAAmB,CACnB,qBAAuB,CACvB,iBAAkB,CAClB,eAAgB,CAChB,UAAY,CACb,iBAKC,cAAe,CAFnB,kBAKI,SAAU,CALd,iBAQI,iBAAkB,CAClB,aAAyB,CAC1B,aAID,4BAAyB,CAAzB,wBAAyB,CACzB,aAAc,CACd,UAAW,CACZ,6BAEC,6BAA8B,CAC9B,oDAA2B,CAC5B,0BAEC,UAAW,CACZ,WAEC,eAAgB,CACjB,sBAEC,cAAiB,CACjB,cAAe,CACf,eAAgB,CAHlB,8BAKI,aAAuB,CACxB,sCAGD,UAAc,CACf,iBAEC,cAAiB,CAClB,4BAEC,eAAkB,CACnB,mBAEC,UAAc,CACf,aCjEC,4BAAyB,CAAzB,wBAAyB,CACzB,iBAAkB,CACnB,iBAEC,oDAA2B,CAC3B,gBAAiB,CACjB,mBAAoB,CACrB,aAEC,aAAc,CACf,YCVC,mBAAqB,CACtB,SAEC,cAAe,CAChB,SAEC,cAAe,CAChB,MCPC,YAAa,CACd,WAEC,iBAAkB,CAClB,kBAAmB,CACnB,aAAc,CACd,gBAAiB,CAClB,WAGC,iBAAkB,CADpB,8BAKQ,iBAAkB,CAClB,WAAY,CACZ,YAAa,CACd,SAKL,8BAA+B,CAC/B,wBAAyB,CAC1B,kBAEC,cAAe,CACf,QAAS,CACV,WAEC,8BAAqC,CACtC,yBAEC,GACE,sBAAuB,CAEzB,GACE,uBAAyB,CAAA,CAI7B,OACE,gBAAiB,CAClB,aAEC,kBAAmB,CACpB,sBAEC,qBAAyB,CACzB,YAAa,CACb,iBAAkB,CAClB,qCAA0C,CAC1C,iBAAkB,CACnB,mBAEC,UAAW,CACX,YAAa,CACb,gBAAiB,CACjB,uBAA2B,CAC3B,2BAA4B,CAC5B,qBAAsB,CACvB,gBAGG,iBAAkB,CAClB,UAAW,CACX,QAAS,CACT,cAAe,CALnB,sBAOM,SAAU,CACX,8BAIH,YAAa,CACb,iBAAkB,CAClB,gBAAiB,CACjB,aAAsB,CACtB,qBAAuB,CACvB,qCAA0C,CAC1C,YAAa,CAId,qGAGC,wBAA2B,CAC5B,QAEC,UAAW,CACX,YAAa,CACb,uBAA2B,CAC3B,2BAA4B,CAC5B,yBAA0B,CAC1B,sMAAyM","file":"main.d67c8e74.chunk.css","sourcesContent":["body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n","html, body, div, span, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, address,\ndel, em, img, small, strong, b, u, i, hr,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header,\nmenu, nav, output, ruby, section, summary,\nbutton,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  font-size: 100%;\n  vertical-align: baseline;\n  word-wrap: break-word;\n}\nhtml {\n  line-height: 1;\n}\nol, ul {\n  list-style: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\ncaption, th, td {\n  text-align: inherit;\n  font-weight: inherit;\n  vertical-align: middle;\n}\nq, blockquote {\n  quotes: none;\n}\na img {\n  border: none;\n}\narticle, aside, details, figure, footer, header, menu, nav, section, summary {\n  display: block;\n}\n","// === RESPOND ABOVE ===\n// How to use: @include respond-above(small) {}\n@mixin respond-above($breakpoint) {\n  @if map-has-key($breakpoints, $breakpoint) {\n    $breakpoint-value: map-get($breakpoints, $breakpoint);\n    @media (min-width: $breakpoint-value) {\n      @content;\n    }\n  } @else {\n    @warn 'Invalid breakpoint: #{$breakpoint}.';\n  }\n}\n\n// === RESPOND BELOW ===\n// How to use: @include respond-below(small) {}\n@mixin respond-below($breakpoint) {\n  @if map-has-key($breakpoints, $breakpoint) {\n    $breakpoint-value: map-get($breakpoints, $breakpoint);\n    @media (max-width: ($breakpoint-value - 1)) {\n      @content;\n    }\n  } @else {\n    @warn 'Invalid breakpoint: #{$breakpoint}.';\n  }\n}\n\n// === RESPOND BETWEEN ===\n// How to use: @include respond-between(small, medium) {};\n@mixin respond-between($lower, $upper) {\n  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {\n    $lower-breakpoint: map-get($breakpoints, $lower);\n    $upper-breakpoint: map-get($breakpoints, $upper);\n    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {\n      @content;\n    }\n  } @else {\n    @if (map-has-key($breakpoints, $lower) == false) {\n      @warn 'Your lower breakpoint was invalid: #{$lower}.';\n    }\n    @if (map-has-key($breakpoints, $upper) == false) {\n      @warn 'Your upper breakpoint was invalid: #{$upper}.';\n    }\n  }\n}\n\n\n// === CONVERT Px To Rem === //\n// How to use: @include pxRem(font-size, 16);\n@function strip-units($number) {\n  @return $number / ($number * 0 + 1);\n}\n\n@function convertRootPxToEm($value) {\n  // Check for null:\n  @if ($value == null) {\n    @return $value;\n  }\n  // Assume em:\n  @if (unitless($value) or unit($value) == em) {\n    @return 0em + $value;\n  }\n  @else {\n    @return 0em + strip-units($value) / 16;\n  }\n}\n\n@function convertPxToRem($px) {\n  @return 0rem + strip-units($px) / 16;\n}\n\n@mixin pxRem($property, $values) {\n  // Create a couple of empty lists as output buffers:\n  $px-values: ();\n  $rem-values: ();\n\n  // Ensure $values is a list.\n  @if type-of($values) != 'list' {\n    $values: join((), $values);\n  }\n\n  // Loop through the $values list:\n  @each $value in $values {\n    @if type-of($value) == number and (unitless($value) or unit($value) == px) {\n      $px-values: join($px-values, 0px + ($value));\n      $rem-values: join($rem-values, convertPxToRem($value));\n    } @else {\n      // No conversion:\n      $px-values: join($px-values, $value);\n      $rem-values: join($rem-values, $value);\n    }\n  }\n\n  #{$property}: $px-values;\n\n  // Don't add media query if it's not needed:\n  @if $px-values != $rem-values {\n    // @media only all {\n      #{$property}: $rem-values;\n    // }\n  }\n}\n\n// === BUILD SPACE (margin, padding) === //\n// How to use: <div class=\"ml-5 mr-5 mx-5 my-5 m-5\"></div>\n$spacePositions: ('x', 'y', '*', 'top', 'left', 'right', 'bottom');\n$spaceSizes: 7;\n$paddingOrmargin: (m: 'margin', p: 'padding');\n@mixin buildSpace($type) {\n  $getType: map-get($paddingOrmargin, $type);\n  @for $i from 0 to $spaceSizes {\n    $size: $i * 5;\n    @each $el in $spacePositions {\n      @if $el == 'x' {\n        .#{$type}x-#{$size} {\n          #{$getType}-left: #{f-pxRem($size)} !important;\n          #{$getType}-right: #{f-pxRem($size)} !important;\n        }\n      } @else if $el == 'y' {\n        .#{$type}y-#{$size} {\n          #{$getType}-top: #{f-pxRem($size)} !important;\n          #{$getType}-bottom: #{f-pxRem($size)} !important;\n        }\n      } @else if $el == '*' {\n        .#{$type}-#{$size} {\n          #{$getType}: #{f-pxRem($size)} !important;\n        }\n      } @else {\n        .#{$type}#{str-slice($el, 1, 1)}-#{$size} {\n          #{$getType}-#{$el}: #{f-pxRem($size)} !important;\n        }\n      }\n    }\n  }\n}\n@include buildSpace('m'); // Margin\n@include buildSpace('p'); // Padding\n","* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: $font-body;\n  font-weight: map-get($font-weight, normal);\n  font-size: $font-size-base;\n  letter-spacing: -.025em;\n}\np {\n  line-height: 1.45;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n}\na {\n  color: map-get($colors, txt-black);\n  text-decoration: none;\n  &:hover {\n    color: map-get($colors, txt-black);\n    text-decoration: none;\n  }\n}\nimg {\n  max-width: 100%;\n}\nh1, h2, h3, h4, h5, h6 {\n  font-weight: map-get($font-weight, medium);\n}\nh1 {\n  font-size: map-get($h-font-size, h1);\n}\nh2 {\n  font-size: map-get($h-font-size, h2);\n}\nh3 {\n  font-size: map-get($h-font-size, h3);\n}\nh4 {\n  font-size: map-get($h-font-size, h4);\n}\nh5 {\n  font-size: map-get($h-font-size, h5);\n}\nh6 {\n  font-size: map-get($h-font-size, h6);\n}\n","// === Font === //\n$font-body: 'Open Sans', sans-serif;\n\n// === Font Weight === //\n$font-weight: (\n  normal: 400,\n  medium: 600,\n  bold: 700\n);\n\n// == Breakpoints === //\n$breakpoints: (\n  small: 480px,\n  medium: 768px,\n  wide: 960px,\n  large: 1024px,\n  largest: 1280px\n);\n\n// === Colors === //\n$colors: (\n  primary: #333,\n  white: #fff,\n  black: #111,\n  txt-black: #333,\n  txt-gray-dark: #777,\n  txt-gray: #939394,\n  border-black: #333,\n  border-gray: #e4e4e4,\n  border-gray-light: #f1f1f1,\n  bg-gray: #e9eaec,\n  bg-gray-light: #f7f7f7,\n  brand-html: #f2652a,\n  brand-css: #379ad7,\n  brand-js: #f1da4e,\n  brand-scss: #be5f8b,\n  brand-nodejs: #7cbe42\n);\n\n// === z-index === //\n$zindexs: (\n  dropdown: 1000,\n  sticky: 1020,\n  fixed: 1030,\n  modal-backdrop: 1040,\n  modal: 1050,\n  popover: 1060,\n  tooltip: 1070\n);\n\n// === Typography === //\n$font-size-base: 0.875rem !default; // 14px\n$font-size-lg: $font-size-base * 1.25 !default;\n$font-size-sm: $font-size-base * .875 !default;\n\n$h-font-size: (\n  h1: $font-size-base * 2.5,\n  h2: $font-size-base * 2,\n  h3: $font-size-base * 1.75,\n  h4: $font-size-base * 1.5,\n  h5: $font-size-base * 1.25,\n  h6: $font-size-base\n);\n",".btn-logout {\n  border: 1px solid map-get($colors, txt-black);\n  cursor: pointer;\n  border-radius: 8px;\n}",".box {\n  margin-bottom: 20px;\n  .wrapper {\n    img {\n      border-radius: 30px;\n      height: 230px;\n      width: 100%;\n      object-fit: cover;\n      position: relative;\n    }\n    .icon-fav {\n      position: absolute;\n      right: 25px;\n      top: 10px;\n      font-size: 24px;\n      color: rgba(172, 167, 167, 0.76);\n      &:hover {\n        color: red;\n      }\n    }\n    .name {\n      color: green;\n    }\n    .price {\n      font-weight: 700;\n      font-size: 22px;\n    }\n  }\n}\n","// Mixins for build grid\n$grid-columns: 12;\n@mixin build-grid($size) {\n  @for $i from 1 through $grid-columns {\n    @if $size != '' {\n      .col-#{$size}-#{$i} {\n        width: percentage($i / $grid-columns);\n      }\n    } @else {\n      .col-#{$i} {\n        width: percentage($i / $grid-columns);\n      }\n    }\n  }\n}\n// End mixins for build grid\n$grid-gutter: 15px;\n$container-width: 1200px;\n.container {\n  padding-left: $grid-gutter;\n  padding-right: $grid-gutter;\n  margin: 0 auto;\n  max-width: $container-width;\n}\n.row {\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: -$grid-gutter;\n  margin-right: -$grid-gutter;\n  > [class*=\"col-\"] {\n    padding-left: $grid-gutter;\n    padding-right: $grid-gutter;\n  }\n}\n\n// Remove gutters (margin, padding) of row & col\n.row-no-gutters {\n  margin-left: 0;\n  margin-right: 0;\n  > [class*=\"col-\"] {\n    padding-left: 0;\n    padding-right: 0;\n  }\n}\n\n/* Grid for all screen\n * Ex: col-1, col-2 */\n@include build-grid('');\n\n/* Grid for screen min-width: $small\n * Ex: col-small-1, col-small-2 */\n@include respond-above(small) {\n  @include build-grid(small);\n}\n\n/* Grid for screen min-width: $medium\n * Ex: col-medium-1, col-medium-2 */\n@include respond-above(medium) {\n  @include build-grid(medium);\n}\n\n/* Grid for screen min-width: $large\n * Ex: col-large-1, col-large-2 */\n@include respond-above(large) {\n  @include build-grid(large);\n}\n\n/* Grid for screen min-width: $largest\n * Ex: col-largest-1, col-largest-2 */\n@include respond-above(largest) {\n  @include build-grid(largest);\n}\n",".wrap-fav-coutner {\n  position: relative;\n  border-right: 1px solid gray;\n  .count {\n    position: absolute;\n    right: 3px;\n    top: -15px;\n    width: 20px;\n    height: 20px;\n    justify-content: center;\n    display: flex;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: 50%;\n    font-weight: 700;\n    color: black;\n  }\n}\n\n.menu-item {\n  .icon {\n    font-size: 25px;\n  }\n  .heart {\n    color: red;\n  }\n  .user {\n    padding-left: 10px;\n    color: rgb(101, 203, 250);\n  }\n}\n\n.header-page {\n  background-color: initial;\n  color: #20232a;\n  width: 100%;\n}\n.header-page .header-wrapper {\n  justify-content: space-between;\n  background-color: #75dfff61;\n}\n.header-left .header-logo {\n  width: 80px;\n}\n.menu-list {\n  margin-bottom: 0;\n}\n.menu-list .menu-item {\n  padding: 0px 10px;\n  font-size: 18px;\n  font-weight: 700;\n  .active {\n    color: rgb(55, 173, 19);\n  } \n}\n.menu-list .menu-item .menu-item-link {\n  color: #000000;\n}\n.header-right li {\n  padding: 0px 10px;\n}\n.header-right li:last-child {\n  padding-right: 0px;\n}\n.header-right li a {\n  color: #000000;\n}",".footer-page {\n  background-color: initial;\n  text-align: center;\n}\n.footer-page div {\n  background-color: #75dfff61;\n  padding-top: 20px;\n  padding-bottom: 20px;\n}\n.coppy-right {\n  color: #20232a;\n}\n",".active-fav {\n  color: red !important;\n}\n.font-20 {\n  font-size: 20px;\n}\n.font-40 {\n  font-size: 40px;\n}\n",".flex {\n  display: flex;\n}\n.container {\n  padding-left: 15px;\n  padding-right: 15px;\n  margin: 0 auto;\n  max-width: 1200px;\n}\n/* main */\n.home-page {\n  text-align: center;\n  .user {\n    .wrapper {\n      img {\n        border-radius: 50%;\n        width: 165px;\n        height: 165px;\n      }\n    }\n  }\n}\n.bg-main {\n  min-height: calc(100vh - 121px);\n  background-color: #FBFBFB;\n}\n.main-page .title {\n  font-size: 45px;\n  margin: 0;\n}\n.page-main {\n  min-height: calc(100vh - 57px - 61px);\n}\n@keyframes App-logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n/* list */\n.users {\n  padding-top: 30px;\n}\n.users .user {\n  margin-bottom: 20px;\n}\n.users .user .wrapper {\n  background-color: #ffffff;\n  padding: 10px;\n  border-radius: 8px;\n  box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.1);\n  position: relative;\n}\n.user .wrapper img {\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n.user {\n  .icon-fav {\n    position: absolute;\n    right: 15px;\n    top: 15px;\n    font-size: 20px;\n    &:hover {\n      color: red;\n    }\n  }\n}\n.main-page .actions .btn-page {\n  margin: 0 3px;\n  border-radius: 3px;\n  padding: 3px 10px;\n  color: rgb(12, 12, 29);\n  background-color: white;\n  box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.1);\n  outline: none;\n}\n.main-page .actions .active {\n  background-color: turquoise;\n}\n.main-page .actions .btn-page:hover,\n.main-page .actions .btn-page:active {\n  background-color: turquoise;\n}\n.banner {\n  width: 100%;\n  height: 512px;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n  background-image: url('https://1.bp.blogspot.com/-graWeBP10N4/Xms8GaIVUWI/AAAAAAAAE9Y/KAWLaZi3uysdC3zxN2BnXyVusniTy12CACLcBGAsYHQ/s1600/banner%2Bwebsite%2Bsen%2Bda%2Bha%2Bdong%2Bsaturday%2Bgarden.jpg');\n}\n"]}